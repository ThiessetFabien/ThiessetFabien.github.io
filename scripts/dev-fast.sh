#!/bin/bash

# Script de d√©veloppement optimis√© pour r√©duire le temps de d√©marrage

# Copier les images de Leaflet seulement si elles n'existent pas d√©j√†
if [ ! -d "public/images/leaflet" ] || [ -z "$(ls -A public/images/leaflet 2>/dev/null)" ]; then
  echo "üì¶ Copie des images Leaflet..."
  mkdir -p public/images/leaflet
  cp -r node_modules/leaflet/dist/images/* public/images/leaflet/
else
  echo "üì¶ Images Leaflet d√©j√† pr√©sentes, ignor√©es."
fi

# D√©finir les options pour am√©liorer les performances
export NODE_OPTIONS="--max-old-space-size=4096"

# V√©rifier l'existence du r√©pertoire .next
if [ -d ".next" ]; then
  echo "üîç R√©pertoire .next trouv√©, utilisation du cache existant"
else
  echo "üîç Cr√©ation du r√©pertoire .next"
  mkdir -p .next/cache
fi

# D√©marrer le serveur de d√©veloppement avec des flags de performance
echo "üöÄ D√©marrage du serveur de d√©veloppement optimis√©..."

# D√©finir l'environnement selon le param√®tre
ENV_FILE=".env.development"
if [ "$1" = "prod" ]; then
  ENV_FILE=".env.production"
  export NODE_ENV=development
  echo "üåê Utilisation de l'environnement de production en mode d√©veloppement"
else
  export NODE_ENV=development
  echo "üåê Utilisation de l'environnement de d√©veloppement"
fi

# Ex√©cuter Next.js avec Bun et un cache plus efficace
echo "‚ö° Utilisation de Bun pour des performances optimales"

# Ignorer les erreurs de socket Bitwarden et d'autres fichiers
export NEXT_IGNORE_WATCHIGNORE=false

# D√©sactiver la t√©l√©m√©trie
export NEXT_TELEMETRY_DISABLED=1

# Ignorer les erreurs de type pour acc√©l√©rer le d√©veloppement 
export NEXT_IGNORE_TYPECHECK_ERRORS=true

# Nettoyer les erreurs pr√©c√©dentes
rm -f .next/error.log 2>/dev/null

# Supprimer le cache TypeScript si le param√®tre clean est sp√©cifi√©
if [ "$2" = "clean" ]; then
  echo "üßπ Nettoyage du cache TypeScript..."
  rm -f tsconfig.tsbuildinfo
  rm -rf .next/cache/typescript
fi

# V√©rifier si la commande dotenv est disponible dans le PATH
if command -v dotenv &> /dev/null; then
  # Utiliser dotenv directement
  BUN_RUNTIME_ARGS="--smol --hot" dotenv -e $ENV_FILE -- bun --bun next dev
elif [ -f "node_modules/.bin/dotenv" ]; then
  # Utiliser la version locale install√©e
  BUN_RUNTIME_ARGS="--smol --hot" ./node_modules/.bin/dotenv -e $ENV_FILE -- bun --bun next dev
else
  # Solution de repli : utiliser npx
  BUN_RUNTIME_ARGS="--smol --hot" npx dotenv-cli -e $ENV_FILE -- bun --bun next dev
fi
